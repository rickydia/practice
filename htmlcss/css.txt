CSS
	can write css code within the html file using
		<style>
		</style>

	better
		make a .css file with all the css code

		<link>
			links the css file with the html file

			requires href - should be set to path of css file, type - should be set to "text/css", rel - should be set to "stylesheet"

			<link
				href = "https://www.codeacademy.com/stylesheets/style.css"
				type = "text/css"
				rel = "stylesheet">

			href = "/style.css"
				if .css file is in same directory


BASIC STRUCTURE AND SYNTAX
	the css selectore essentially matches the html tag for that element but w/o the angled brackets

	if wanting to select <h1>
		h1 {
		}

	if wanting to select all
		* {
			font-family: Arial;
		}

	css declarations
		need two things within the selected html element
			property - the property you'd like to style

			value - the value of the property

			h1, h2, p {
				color: Green;
			}

	comments
		/* psknsdnkjsd */


COLORS
	foreground colors
		color: Red;

	background colors
		background-color: Blue;

	147 named colors
		google them if needed

	rgb colors
		color: rgb(123, 20, 233);

	rgba
		the 'a' signifies opacity, between 0 and 1, inclusive
		color: rgba(123, 20, 233, .5)

	hex colors
		color: #452F73

	hsl
		color: hsl(182, 20%, 50%)

	hsla
		color: hsla(182, 20%, 50%, .4)

	color declarations
		many older browsers dont support rgba, hsl, hsla
		so above rgba, hsl, hsla - add reduntent declaration in rgb or something of the sort so that it still has something to do
		takes the last declaration, but if can't handle last, takes the second to last, etc


FONTS
	font-family: "Times New Roman";

	serif
		fonts with little extra ass shit on the edges

	sans-serif
		w/o extra shit

	h1 {
		font-family: Garamond, Times, sarif;
	}
		uses Garamond first, then Times as a fallback, then if that doesn't work, then any sarif font

	google fonts
		add the fonts in head

		<link
			href = "https://fonts.googleapis.com/css?family=Raleway"
			type = "text/css"
			rel = "stylesheet">

		h1 {
			font-family: Raleway, Georgia, serif;
		}

	font size
		font-size: 18px;

		can use px, %, em
			px- pixels on screen

			em- change size of font relative to parent element's size of text

			%- relative to default size of web browser

	line height
		changes the height of the line

		preffered to use ems

		line-height: 1.5em;

	word spacing
		word-spacing: .3em;

		typical is about 0.25em

	letter spacing
		letter-spacing: .3em;

	font weight
		whether bold or normal text
		sets entire block into bold

		font-weight: bold;

		100 - thin
		200, 300, 400 - normal
		500, 600, 700, 800, 900 - bold

	font style
		italics or normal

		font-style: italic;

	text transformation
		all appear to be upper or lower cased

		text-transform: uppercase;

	text alignement
		align text on left, right, or center

		text-align: right;


CLASSES, IDS, DIVS
	id
		#boom {
			background-color: #56ABFF;
		}

		used to target specific headings, paragraphs, etc

	classes
		.science {
			background-color: #56ABFF;
		}

		p.science {
			line-height: 1.3em;
		}

		.first, .last {
			font-size: 20px;
		}

		.science selects all elements with the classs science
		p.science selects all p elements with the class science

	multiple classes
		.book {
			font-family: Georgia, serif;
		}

		.domestic {
			font-color: #0902CC;
		}

		.foreign {
			font-color: #B097DD;
		}

		<h1 class="book domestic"> The Way of the Deep </h1>

		<h1 class="book foreign"> A Night in the Sky </h1>

		if you want to use multiple classes on a certain element


NEW CSS COURSE
CSS SETUP AND SELECTORS
	inline styles
		css within html file, specifically wihtin an element
		<p style="color:red; font-size:20px;">Text</p>

	<style> </style>
		allows you to style html elements from within html file
		must be within <head> </head>
		<head>
			<style>
				p {
					color:red;
					font-size:20px;
				}
			</style>
		</head>

	.css file
		best location to write styling for elements
		must be linked into HTML file

	<link href="./css/style.css" type="text/css" rel="stylesheet" />
		must be placed within head of HTML file
		href is the address of the css file
		type is the type of file you're linking to
		rel is the relationship between the HTML and css files

	tag name
		p {
			font-family: Arial;
		}

	class name
		'class' is an attribute that can be added to html elements so that all elements of that class are stlyed the same
		<!-- file.html -->
		<p class="brand">Sole Shoe Company</p>

		/* style.css */
		.brand {
			/* stuff */
		}

	multiple classes
		allows an html element to be part of multiple classes
		<!-- file.html -->
		<p class="green bold">Text</p>

		/* style.css */
		.green {
			color: green;
		}
		.bold {
			font-weight: bold;
		}

	id name
		allows a html element to be styled uniquely regardless of what classes are applied to the element
		<!-- file.html -->
		<p id="large-title">Text</p>

		/* style.css */
		#large-title {
			/* stuff */
		}

	class vs id
		classes meant to be reused over many elements
		id meant to style only one element

	specificity
		!important > id > class > tag
		meaning it'll follow the styling for id first, then class, then tag

	chaining electors
		done in order to require an html element to have two or more css selectors at the same time
		p.special {

		}

	nested elements
		<!-- file.html -->
		<ul class='main-list'>
			<li> ... </li>
		</ul>

		/* style.css */
		.main-list li {

		}

	important
		!important is applied to specific attributes instead of full rules
		it overrides ANY style no matter how specific it is

		p {
			color: blue !important;
		}

	multiple selectors
		allows diff elements/class/ids to have same code
		SEPERATED BY COMMA

		h1, .menu {
			font-family: Georgia;
		}


VISUAL RULES
	font-family
		used to change font
		font must be installed on a user's computer
		default font is Times New Roman
		2-3 fonts max
		if font-family is more than one word, should be enclosed in quotes
		p {
			font-family: "Courier New";
		}

	font-size
		used to change font size
		p {
			font-size: 18px
		}

	font-weight
		font-weight: bold;
		how bold or thin text appears
		has value of bold and normal
		p {
			font-weight: bold;
		}

	text-align
		text-align: right;
		left, center, or right
		p {
			text-align: right;
		}

	color
		foreground color
			the color that an element appears in
			p {
				color: red;
			}

		background-color
			the color behind the element
			p {
				background-color: blue;
			}

	opacity
		the measure of the transparancy of an element
		0 to 1 inclusive
			0 is transparant
			1 is fully visible
		p {
			opacity: 0.5;
		}

	background-image
		makes the background of an element into an image
		p {
			background-image: url("https://www.example.com/image.jpg");
			background-image: url("images/image.jpg");
		}


THE BOX MODEL
	box model
		margin
			border
				padding
					content - height - width

	height and width
		px
			pixels allow you to set the exact size of an element's box

	border
		a line that surrounds an element
		width
			the thinkness of the border
			can be set in pixels or with 'thin', 'medium', or 'thick'
		style
			the design of the border
		color
			color of the border
		default is "medium none color"
			"color" is the current color of the element
		p{
			border: 3px solid coral;
		}

	border-radius
		changes the shape of the outlining radius
		can create a perfect circle by either setting radius equal to height of the box, or to 100%
		div.container {
			border-radius: 100%
			border-radius: 5px;
		}

	padding
		the space between the contents of a box and the borders of a box
		often used to expand the background color and make content look lessed cramped
		p.content-header {
			padding: 0px;
			padding: 6px 11px 4px 9px;
			padding-top: 6px;
			padding-right: 11px;
			padding-bottom: 4px;
			padding-left: 9px;
			/* sets top and bottome to 5 and left and right to 10 */
			padding: 5px 10px;
		}

	margin
		refers to the space directly outside of the box
		p.content-header {
			margin: 0px;
			margin: 6px 11px 4px 9px;
			margin-top: 6px;
			margin-right: 11px;
			margin-bottom: 4px;
			margin-left: 9px;
			/* sets top and bottom to 5 and left and right to 10 */
			margin: 5px 10px;
		}

	auto
		allows to automatically center margins
		must have declared a width
		div.headline {
			width: 400px;
			margin: 0 auto;
		}

	margin collapse
		horizontal margins, like padding, are added together between neighboring elements
		verticle margins aren't. the larger of the top/bottom margins takes presidece and only that one is used

	min and max height/width
		min-width/height
			the property ensures a minimum width/height of an element's box
		max-width/height
			the property ensures a maximum width/height of an element's box
		p {
			min-width: 300px;
			max-width: 600px;
			min-height: 150px;
			max-height: 300px;
		}

	overflow
		controls what happens to content that spills outside its box
		can be set to:
			hidden
				any content that overflows will be hidden from view
			scroll
				a scrollbar will be added to the element's box so that the rest of the content can be viewed by scrolling
			visible
				the overflow content will be displayed outside of the containing element
		p {
			overflow: scroll;
		}

	resetting defaults
		all major web browsers have a default stylesheet they use in the absense of an external stylesheet known as user agen stylesheets
		often have default css rules that set default values for padding and margin
		can reset all defaults by:
		* {
			margin: 0;
			padding: 0;
		}

	visibility
		elements can be hidden from view
		can be set to hidden(hides an element) or visible(displays an element)
		.future {
			visibility: hidden;
		}

	visibility: hidden vs display: none
		display: none will be completely removed from the web page
		visibility: hidden will not be visible on the web page, but the space reserved for it will


CHANGING THE BOX MODEL



